# coding: utf-8

"""
    Platform Repository Service

    Platform Repository Service - Sage Bionetworks Platform   # noqa: E501

    The version of the OpenAPI document: develop-SNAPSHOT
    Contact: thomas.yu@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from synclient.configuration import Configuration


class DownloadFromTableResult(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'concrete_type': 'str',
        'etag': 'str',
        'headers': 'list[SelectColumn]',
        'results_file_handle_id': 'str',
        'table_id': 'str'
    }

    attribute_map = {
        'concrete_type': 'concreteType',
        'etag': 'etag',
        'headers': 'headers',
        'results_file_handle_id': 'resultsFileHandleId',
        'table_id': 'tableId'
    }

    def __init__(self, concrete_type=None, etag=None, headers=None, results_file_handle_id=None, table_id=None, local_vars_configuration=None):  # noqa: E501
        """DownloadFromTableResult - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._concrete_type = None
        self._etag = None
        self._headers = None
        self._results_file_handle_id = None
        self._table_id = None
        self.discriminator = None

        if concrete_type is not None:
            self.concrete_type = concrete_type
        if etag is not None:
            self.etag = etag
        if headers is not None:
            self.headers = headers
        if results_file_handle_id is not None:
            self.results_file_handle_id = results_file_handle_id
        if table_id is not None:
            self.table_id = table_id

    @property
    def concrete_type(self):
        """Gets the concrete_type of this DownloadFromTableResult.  # noqa: E501

        Concrete Type  # noqa: E501

        :return: The concrete_type of this DownloadFromTableResult.  # noqa: E501
        :rtype: str
        """
        return self._concrete_type

    @concrete_type.setter
    def concrete_type(self, concrete_type):
        """Sets the concrete_type of this DownloadFromTableResult.

        Concrete Type  # noqa: E501

        :param concrete_type: The concrete_type of this DownloadFromTableResult.  # noqa: E501
        :type: str
        """

        self._concrete_type = concrete_type

    @property
    def etag(self):
        """Gets the etag of this DownloadFromTableResult.  # noqa: E501

        Any RowSet returned from Synapse will contain the current etag of the change set. To update any rows from a RowSet the etag must be provided with the POST.   # noqa: E501

        :return: The etag of this DownloadFromTableResult.  # noqa: E501
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this DownloadFromTableResult.

        Any RowSet returned from Synapse will contain the current etag of the change set. To update any rows from a RowSet the etag must be provided with the POST.   # noqa: E501

        :param etag: The etag of this DownloadFromTableResult.  # noqa: E501
        :type: str
        """

        self._etag = etag

    @property
    def headers(self):
        """Gets the headers of this DownloadFromTableResult.  # noqa: E501

        The list of SelectColumns that describes the rows of this set.  # noqa: E501

        :return: The headers of this DownloadFromTableResult.  # noqa: E501
        :rtype: list[SelectColumn]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this DownloadFromTableResult.

        The list of SelectColumns that describes the rows of this set.  # noqa: E501

        :param headers: The headers of this DownloadFromTableResult.  # noqa: E501
        :type: list[SelectColumn]
        """

        self._headers = headers

    @property
    def results_file_handle_id(self):
        """Gets the results_file_handle_id of this DownloadFromTableResult.  # noqa: E501

        The resulting file handle ID can be used to download the CSV file created by this job. The file will contain all of the data requested in the query SQL provided when the job was started.   # noqa: E501

        :return: The results_file_handle_id of this DownloadFromTableResult.  # noqa: E501
        :rtype: str
        """
        return self._results_file_handle_id

    @results_file_handle_id.setter
    def results_file_handle_id(self, results_file_handle_id):
        """Sets the results_file_handle_id of this DownloadFromTableResult.

        The resulting file handle ID can be used to download the CSV file created by this job. The file will contain all of the data requested in the query SQL provided when the job was started.   # noqa: E501

        :param results_file_handle_id: The results_file_handle_id of this DownloadFromTableResult.  # noqa: E501
        :type: str
        """

        self._results_file_handle_id = results_file_handle_id

    @property
    def table_id(self):
        """Gets the table_id of this DownloadFromTableResult.  # noqa: E501

        The ID of the table identified in the from clause of the table query.  # noqa: E501

        :return: The table_id of this DownloadFromTableResult.  # noqa: E501
        :rtype: str
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """Sets the table_id of this DownloadFromTableResult.

        The ID of the table identified in the from clause of the table query.  # noqa: E501

        :param table_id: The table_id of this DownloadFromTableResult.  # noqa: E501
        :type: str
        """

        self._table_id = table_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DownloadFromTableResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DownloadFromTableResult):
            return True

        return self.to_dict() != other.to_dict()
