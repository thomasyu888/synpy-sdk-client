# coding: utf-8

"""
    Platform Repository Service

    Platform Repository Service - Sage Bionetworks Platform   # noqa: E501

    The version of the OpenAPI document: develop-SNAPSHOT
    Contact: thomas.yu@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from synclient.configuration import Configuration


class EntityBundleRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'include_access_control_list': 'bool',
        'include_annotations': 'bool',
        'include_benefactor_acl': 'bool',
        'include_doi_association': 'bool',
        'include_entity': 'bool',
        'include_entity_path': 'bool',
        'include_file_handles': 'bool',
        'include_file_name': 'bool',
        'include_has_children': 'bool',
        'include_permissions': 'bool',
        'include_restriction_information': 'bool',
        'include_root_wiki_id': 'bool',
        'include_table_bundle': 'bool',
        'include_thread_count': 'bool'
    }

    attribute_map = {
        'include_access_control_list': 'includeAccessControlList',
        'include_annotations': 'includeAnnotations',
        'include_benefactor_acl': 'includeBenefactorACL',
        'include_doi_association': 'includeDOIAssociation',
        'include_entity': 'includeEntity',
        'include_entity_path': 'includeEntityPath',
        'include_file_handles': 'includeFileHandles',
        'include_file_name': 'includeFileName',
        'include_has_children': 'includeHasChildren',
        'include_permissions': 'includePermissions',
        'include_restriction_information': 'includeRestrictionInformation',
        'include_root_wiki_id': 'includeRootWikiId',
        'include_table_bundle': 'includeTableBundle',
        'include_thread_count': 'includeThreadCount'
    }

    def __init__(self, include_access_control_list=None, include_annotations=None, include_benefactor_acl=None, include_doi_association=None, include_entity=None, include_entity_path=None, include_file_handles=None, include_file_name=None, include_has_children=None, include_permissions=None, include_restriction_information=None, include_root_wiki_id=None, include_table_bundle=None, include_thread_count=None, local_vars_configuration=None):  # noqa: E501
        """EntityBundleRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._include_access_control_list = None
        self._include_annotations = None
        self._include_benefactor_acl = None
        self._include_doi_association = None
        self._include_entity = None
        self._include_entity_path = None
        self._include_file_handles = None
        self._include_file_name = None
        self._include_has_children = None
        self._include_permissions = None
        self._include_restriction_information = None
        self._include_root_wiki_id = None
        self._include_table_bundle = None
        self._include_thread_count = None
        self.discriminator = None

        if include_access_control_list is not None:
            self.include_access_control_list = include_access_control_list
        if include_annotations is not None:
            self.include_annotations = include_annotations
        if include_benefactor_acl is not None:
            self.include_benefactor_acl = include_benefactor_acl
        if include_doi_association is not None:
            self.include_doi_association = include_doi_association
        if include_entity is not None:
            self.include_entity = include_entity
        if include_entity_path is not None:
            self.include_entity_path = include_entity_path
        if include_file_handles is not None:
            self.include_file_handles = include_file_handles
        if include_file_name is not None:
            self.include_file_name = include_file_name
        if include_has_children is not None:
            self.include_has_children = include_has_children
        if include_permissions is not None:
            self.include_permissions = include_permissions
        if include_restriction_information is not None:
            self.include_restriction_information = include_restriction_information
        if include_root_wiki_id is not None:
            self.include_root_wiki_id = include_root_wiki_id
        if include_table_bundle is not None:
            self.include_table_bundle = include_table_bundle
        if include_thread_count is not None:
            self.include_thread_count = include_thread_count

    @property
    def include_access_control_list(self):
        """Gets the include_access_control_list of this EntityBundleRequest.  # noqa: E501

        Include the AccessControlList for this Entity  # noqa: E501

        :return: The include_access_control_list of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_access_control_list

    @include_access_control_list.setter
    def include_access_control_list(self, include_access_control_list):
        """Sets the include_access_control_list of this EntityBundleRequest.

        Include the AccessControlList for this Entity  # noqa: E501

        :param include_access_control_list: The include_access_control_list of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_access_control_list = include_access_control_list

    @property
    def include_annotations(self):
        """Gets the include_annotations of this EntityBundleRequest.  # noqa: E501

        Include Annotations associated with the Entity in the response.  # noqa: E501

        :return: The include_annotations of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_annotations

    @include_annotations.setter
    def include_annotations(self, include_annotations):
        """Sets the include_annotations of this EntityBundleRequest.

        Include Annotations associated with the Entity in the response.  # noqa: E501

        :param include_annotations: The include_annotations of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_annotations = include_annotations

    @property
    def include_benefactor_acl(self):
        """Gets the include_benefactor_acl of this EntityBundleRequest.  # noqa: E501

        Include the ACL of the Entity from which this Entity inherits its AccessControlList  # noqa: E501

        :return: The include_benefactor_acl of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_benefactor_acl

    @include_benefactor_acl.setter
    def include_benefactor_acl(self, include_benefactor_acl):
        """Sets the include_benefactor_acl of this EntityBundleRequest.

        Include the ACL of the Entity from which this Entity inherits its AccessControlList  # noqa: E501

        :param include_benefactor_acl: The include_benefactor_acl of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_benefactor_acl = include_benefactor_acl

    @property
    def include_doi_association(self):
        """Gets the include_doi_association of this EntityBundleRequest.  # noqa: E501

        Include DOIs associated with this Entity  # noqa: E501

        :return: The include_doi_association of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_doi_association

    @include_doi_association.setter
    def include_doi_association(self, include_doi_association):
        """Sets the include_doi_association of this EntityBundleRequest.

        Include DOIs associated with this Entity  # noqa: E501

        :param include_doi_association: The include_doi_association of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_doi_association = include_doi_association

    @property
    def include_entity(self):
        """Gets the include_entity of this EntityBundleRequest.  # noqa: E501

        Include the Entity in the response.  # noqa: E501

        :return: The include_entity of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_entity

    @include_entity.setter
    def include_entity(self, include_entity):
        """Sets the include_entity of this EntityBundleRequest.

        Include the Entity in the response.  # noqa: E501

        :param include_entity: The include_entity of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_entity = include_entity

    @property
    def include_entity_path(self):
        """Gets the include_entity_path of this EntityBundleRequest.  # noqa: E501

        Include EntityHeaders for all Entities in this Entity's path   # noqa: E501

        :return: The include_entity_path of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_entity_path

    @include_entity_path.setter
    def include_entity_path(self, include_entity_path):
        """Sets the include_entity_path of this EntityBundleRequest.

        Include EntityHeaders for all Entities in this Entity's path   # noqa: E501

        :param include_entity_path: The include_entity_path of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_entity_path = include_entity_path

    @property
    def include_file_handles(self):
        """Gets the include_file_handles of this EntityBundleRequest.  # noqa: E501

        Include all FileHandles associated with this Entity.  # noqa: E501

        :return: The include_file_handles of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_file_handles

    @include_file_handles.setter
    def include_file_handles(self, include_file_handles):
        """Sets the include_file_handles of this EntityBundleRequest.

        Include all FileHandles associated with this Entity.  # noqa: E501

        :param include_file_handles: The include_file_handles of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_file_handles = include_file_handles

    @property
    def include_file_name(self):
        """Gets the include_file_name of this EntityBundleRequest.  # noqa: E501

        If this Entity is a FileEntity, include its filename  # noqa: E501

        :return: The include_file_name of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_file_name

    @include_file_name.setter
    def include_file_name(self, include_file_name):
        """Sets the include_file_name of this EntityBundleRequest.

        If this Entity is a FileEntity, include its filename  # noqa: E501

        :param include_file_name: The include_file_name of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_file_name = include_file_name

    @property
    def include_has_children(self):
        """Gets the include_has_children of this EntityBundleRequest.  # noqa: E501

        Include boolean indicating whether this Entity has children  # noqa: E501

        :return: The include_has_children of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_has_children

    @include_has_children.setter
    def include_has_children(self, include_has_children):
        """Sets the include_has_children of this EntityBundleRequest.

        Include boolean indicating whether this Entity has children  # noqa: E501

        :param include_has_children: The include_has_children of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_has_children = include_has_children

    @property
    def include_permissions(self):
        """Gets the include_permissions of this EntityBundleRequest.  # noqa: E501

        Include permissions of the current user on the entity.  # noqa: E501

        :return: The include_permissions of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_permissions

    @include_permissions.setter
    def include_permissions(self, include_permissions):
        """Sets the include_permissions of this EntityBundleRequest.

        Include permissions of the current user on the entity.  # noqa: E501

        :param include_permissions: The include_permissions of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_permissions = include_permissions

    @property
    def include_restriction_information(self):
        """Gets the include_restriction_information of this EntityBundleRequest.  # noqa: E501

        Include the RestrictionLevel of this Entity  # noqa: E501

        :return: The include_restriction_information of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_restriction_information

    @include_restriction_information.setter
    def include_restriction_information(self, include_restriction_information):
        """Sets the include_restriction_information of this EntityBundleRequest.

        Include the RestrictionLevel of this Entity  # noqa: E501

        :param include_restriction_information: The include_restriction_information of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_restriction_information = include_restriction_information

    @property
    def include_root_wiki_id(self):
        """Gets the include_root_wiki_id of this EntityBundleRequest.  # noqa: E501

        Include the id of the root Wiki associated with this Entity  # noqa: E501

        :return: The include_root_wiki_id of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_root_wiki_id

    @include_root_wiki_id.setter
    def include_root_wiki_id(self, include_root_wiki_id):
        """Sets the include_root_wiki_id of this EntityBundleRequest.

        Include the id of the root Wiki associated with this Entity  # noqa: E501

        :param include_root_wiki_id: The include_root_wiki_id of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_root_wiki_id = include_root_wiki_id

    @property
    def include_table_bundle(self):
        """Gets the include_table_bundle of this EntityBundleRequest.  # noqa: E501

        If the Entity is a TableEntity, include Table specific metadata.  # noqa: E501

        :return: The include_table_bundle of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_table_bundle

    @include_table_bundle.setter
    def include_table_bundle(self, include_table_bundle):
        """Sets the include_table_bundle of this EntityBundleRequest.

        If the Entity is a TableEntity, include Table specific metadata.  # noqa: E501

        :param include_table_bundle: The include_table_bundle of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_table_bundle = include_table_bundle

    @property
    def include_thread_count(self):
        """Gets the include_thread_count of this EntityBundleRequest.  # noqa: E501

        Include the number of discussion threads that mention this Entity  # noqa: E501

        :return: The include_thread_count of this EntityBundleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_thread_count

    @include_thread_count.setter
    def include_thread_count(self, include_thread_count):
        """Sets the include_thread_count of this EntityBundleRequest.

        Include the number of discussion threads that mention this Entity  # noqa: E501

        :param include_thread_count: The include_thread_count of this EntityBundleRequest.  # noqa: E501
        :type: bool
        """

        self._include_thread_count = include_thread_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EntityBundleRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EntityBundleRequest):
            return True

        return self.to_dict() != other.to_dict()
