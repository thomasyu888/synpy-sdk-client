"""
    Platform Repository Service

    Platform Repository Service - Sage Bionetworks Platform   # noqa: E501

    The version of the OpenAPI document: develop-SNAPSHOT
    Contact: thomas.yu@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from synclient.api_client import ApiClient, Endpoint
from synclient.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from synclient.model.entity_bundle_create_v2 import EntityBundleCreateV2
from synclient.model.entity_bundle_request import EntityBundleRequest
from synclient.model.entity_bundle_v2 import EntityBundleV2


class EntityBundleV2ServicesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __create_entity_bundle2(
            self,
            **kwargs
        ):
            """Create an entity and associated components with a single POST.  # noqa: E501

            Create an entity and associated components with a single POST. Specifically, this operation supports creation of an Entity, its Annotations, and its ACL.  Upon successful creation, an EntityBundle is returned containing the requested components, as defined by the partsMask in the request object.'   # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.create_entity_bundle2(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                generated_by (str): Generated By. [optional]
                entity_bundle_create_v2 (EntityBundleCreateV2): [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                EntityBundleV2
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.create_entity_bundle2 = Endpoint(
            settings={
                'response_type': (EntityBundleV2,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/entity/bundle2/create',
                'operation_id': 'create_entity_bundle2',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'generated_by',
                    'entity_bundle_create_v2',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'generated_by':
                        (str,),
                    'entity_bundle_create_v2':
                        (EntityBundleCreateV2,),
                },
                'attribute_map': {
                    'generated_by': 'generatedBy',
                },
                'location_map': {
                    'generated_by': 'query',
                    'entity_bundle_create_v2': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__create_entity_bundle2
        )

        def __get_entity_bundle(
            self,
            id,
            **kwargs
        ):
            """Get an entity and related data with a single POST.  # noqa: E501

            Get an entity and related data with a single POST.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_entity_bundle(id, async_req=True)
            >>> result = thread.get()

            Args:
                id (str): The ID of an Entity.

            Keyword Args:
                entity_bundle_request (EntityBundleRequest): [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                EntityBundleV2
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            return self.call_with_http_info(**kwargs)

        self.get_entity_bundle = Endpoint(
            settings={
                'response_type': (EntityBundleV2,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/entity/{id}/bundle2',
                'operation_id': 'get_entity_bundle',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'entity_bundle_request',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'entity_bundle_request':
                        (EntityBundleRequest,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'path',
                    'entity_bundle_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__get_entity_bundle
        )

        def __get_entity_bundle2(
            self,
            id,
            version_number,
            **kwargs
        ):
            """Get an entity at a specific version and its related data with a single POST.   # noqa: E501

            Get an entity at a specific version and its related data with a single POST.  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_entity_bundle2(id, version_number, async_req=True)
            >>> result = thread.get()

            Args:
                id (str): The ID of the Entity.
                version_number (int): The version number of the Entity.

            Keyword Args:
                entity_bundle_request (EntityBundleRequest): [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                EntityBundleV2
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            kwargs['version_number'] = \
                version_number
            return self.call_with_http_info(**kwargs)

        self.get_entity_bundle2 = Endpoint(
            settings={
                'response_type': (EntityBundleV2,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/entity/{id}/version/{versionNumber}/bundle2',
                'operation_id': 'get_entity_bundle2',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'version_number',
                    'entity_bundle_request',
                ],
                'required': [
                    'id',
                    'version_number',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'version_number':
                        (int,),
                    'entity_bundle_request':
                        (EntityBundleRequest,),
                },
                'attribute_map': {
                    'id': 'id',
                    'version_number': 'versionNumber',
                },
                'location_map': {
                    'id': 'path',
                    'version_number': 'path',
                    'entity_bundle_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__get_entity_bundle2
        )

        def __update_entity_bundle(
            self,
            id,
            **kwargs
        ):
            """Update an entity and associated components with a single PUT.  # noqa: E501

            Update an entity and associated components with a single PUT. Specifically, this operation supports update of an Entity, its Annotations, and its ACL. Upon successful creation, an EntityBundle is returned containing the requested components, as defined by the partsMask in the request object.   # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.update_entity_bundle(id, async_req=True)
            >>> result = thread.get()

            Args:
                id (str): The ID of an Entity.

            Keyword Args:
                generated_by (str): Generated by. [optional]
                entity_bundle_create_v2 (EntityBundleCreateV2): The EntityBundleCreate object containing the Entity and Annotations to update. . [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                EntityBundleV2
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            return self.call_with_http_info(**kwargs)

        self.update_entity_bundle = Endpoint(
            settings={
                'response_type': (EntityBundleV2,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/entity/{id}/bundle2',
                'operation_id': 'update_entity_bundle',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'generated_by',
                    'entity_bundle_create_v2',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'generated_by':
                        (str,),
                    'entity_bundle_create_v2':
                        (EntityBundleCreateV2,),
                },
                'attribute_map': {
                    'id': 'id',
                    'generated_by': 'generatedBy',
                },
                'location_map': {
                    'id': 'path',
                    'generated_by': 'query',
                    'entity_bundle_create_v2': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__update_entity_bundle
        )
