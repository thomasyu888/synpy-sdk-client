# coding: utf-8

"""
    Platform Repository Service

    Platform Repository Service - Sage Bionetworks Platform   # noqa: E501

    The version of the OpenAPI document: develop-SNAPSHOT
    Contact: thomas.yu@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import synclient
from synclient.api.team_services_api import TeamServicesApi  # noqa: E501
from synclient.rest import ApiException


class TestTeamServicesApi(unittest.TestCase):
    """TeamServicesApi unit test stubs"""

    def setUp(self):
        self.api = synclient.api.team_services_api.TeamServicesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_team_member(self):
        """Test case for add_team_member

        Add a member to the Team.  # noqa: E501
        """
        pass

    def test_add_team_member_via_signed_token(self):
        """Test case for add_team_member_via_signed_token

        Add a member to the Team.  # noqa: E501
        """
        pass

    def test_create_team(self):
        """Test case for create_team

        Create a new Team.  # noqa: E501
        """
        pass

    def test_delete_team(self):
        """Test case for delete_team

        Delete the Team.  # noqa: E501
        """
        pass

    def test_file_preview_redirect_url_for_team_icon(self):
        """Test case for file_preview_redirect_url_for_team_icon

        Retrieve the download URL for the Team icon preview, or receive a redirect response to said URL.   # noqa: E501
        """
        pass

    def test_file_redirect_url_for_team_icon(self):
        """Test case for file_redirect_url_for_team_icon

        Retrieve the download URL for the Team icon, or receive a redirect response to said URL   # noqa: E501
        """
        pass

    def test_get_team(self):
        """Test case for get_team

        Retrieve the metadata for a specified Team.  # noqa: E501
        """
        pass

    def test_get_team_acl(self):
        """Test case for get_team_acl

        Retrieve the AccessControlList for a specified Team.  # noqa: E501
        """
        pass

    def test_get_team_member(self):
        """Test case for get_team_member

        .  # noqa: E501
        """
        pass

    def test_get_team_member_count(self):
        """Test case for get_team_member_count

        Retrieve the number of Team members matching the supplied name prefix.  # noqa: E501
        """
        pass

    def test_get_team_members(self):
        """Test case for get_team_members

        Retrieve a paginated list of Team members matching the supplied name prefix.  # noqa: E501
        """
        pass

    def test_get_team_membership_status(self):
        """Test case for get_team_membership_status

        Retrieve the Team Membership Status bundle for a team and user.  # noqa: E501
        """
        pass

    def test_get_teams_by_name_fragment(self):
        """Test case for get_teams_by_name_fragment

        Retrieve a paginated list of Teams in alphabetical order by Team name.  # noqa: E501
        """
        pass

    def test_list_team_members_given_teamand_user_list(self):
        """Test case for list_team_members_given_teamand_user_list

        Returns the TeamMember info for a team and a given list of members' principal IDs.   # noqa: E501
        """
        pass

    def test_list_teams(self):
        """Test case for list_teams

        Retrieve a list of Teams given their IDs.  # noqa: E501
        """
        pass

    def test_remove_team_member(self):
        """Test case for remove_team_member

        Remove the given member from the specified Team.  # noqa: E501
        """
        pass

    def test_update_team(self):
        """Test case for update_team

        Update the Team metadata for the specified Team.  # noqa: E501
        """
        pass

    def test_update_team_acl(self):
        """Test case for update_team_acl

        Update the Access Control List for the specified Team.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
