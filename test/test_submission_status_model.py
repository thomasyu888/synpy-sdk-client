# coding: utf-8

"""
    Platform Repository Service

    Platform Repository Service - Sage Bionetworks Platform   # noqa: E501

    The version of the OpenAPI document: develop-SNAPSHOT
    Contact: thomas.yu@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import synclient
from synclient.models.submission_status_model import SubmissionStatusModel  # noqa: E501
from synclient.rest import ApiException

class TestSubmissionStatusModel(unittest.TestCase):
    """SubmissionStatusModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SubmissionStatusModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = synclient.models.submission_status_model.SubmissionStatusModel()  # noqa: E501
        if include_optional :
            return SubmissionStatusModel(
                annotations = {"doubleAnnos":[{"isPrivate":true,"key":"...","value":12345},{"isPrivate":true,"key":"...","value":12345}],"longAnnos":[{"isPrivate":true,"key":"...","value":12345},{"isPrivate":true,"key":"...","value":12345}],"objectId":"...","scopeId":"...","stringAnnos":[{"isPrivate":true,"key":"...","value":"..."},{"isPrivate":true,"key":"...","value":"..."}],"version":12345}, 
                can_cancel = True, 
                cancel_requested = True, 
                entity_id = '0', 
                etag = '0', 
                id = '0', 
                modified_on = '0', 
                status = 'OPEN', 
                status_version = 1.337, 
                submission_annotations = {"annotations":{"property1":{"type":"STRING","value":["...","..."]},"property2":{"type":"STRING","value":["...","..."]}},"etag":"...","id":"..."}, 
                version_number = 56
            )
        else :
            return SubmissionStatusModel(
        )

    def testSubmissionStatusModel(self):
        """Test SubmissionStatusModel"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
