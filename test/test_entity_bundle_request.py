# coding: utf-8

"""
    Platform Repository Service

    Platform Repository Service - Sage Bionetworks Platform   # noqa: E501

    The version of the OpenAPI document: develop-SNAPSHOT
    Contact: thomas.yu@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import synclient
from synclient.models.entity_bundle_request import EntityBundleRequest  # noqa: E501
from synclient.rest import ApiException

class TestEntityBundleRequest(unittest.TestCase):
    """EntityBundleRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EntityBundleRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = synclient.models.entity_bundle_request.EntityBundleRequest()  # noqa: E501
        if include_optional :
            return EntityBundleRequest(
                include_access_control_list = True, 
                include_annotations = True, 
                include_benefactor_acl = True, 
                include_doi_association = True, 
                include_entity = True, 
                include_entity_path = True, 
                include_file_handles = True, 
                include_file_name = True, 
                include_has_children = True, 
                include_permissions = True, 
                include_restriction_information = True, 
                include_root_wiki_id = True, 
                include_table_bundle = True, 
                include_thread_count = True
            )
        else :
            return EntityBundleRequest(
        )

    def testEntityBundleRequest(self):
        """Test EntityBundleRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
